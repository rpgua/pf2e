---
import { themes } from "@lib/config";
---
<style>
  .theme-controller {
    display: flex;
    align-items: center;
  }
</style>

<div class="dropdown dropdown-end">
  <div tabindex="0" role="button" class="btn m-1 w-full">
    Theme
    <svg
      width="12px"
      height="12px"
      class="inline-block h-2 w-2 fill-current opacity-60"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 2048 2048"
    >
      <path d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"></path>
    </svg>
  </div>
  <ul
    tabindex="0"
    class="dropdown-content bg-base-300 rounded-box z-100 shadow-2xl w-52 p-4"
  >
    {themes.map((theme) => (
      <li>
        <input
          type="radio"
          name="theme-dropdown"
          class="theme-controller btn btn-sm btn-block btn-ghost justify-start"
          aria-label={theme}
          value={theme}
          data-theme={theme}
        />
      </li>
    ))}
  </ul>
</div>

<script>
  // const themes = ['light', 'dark', 'system']; // Replace this with the actual `themes` array from your config.
  const defaultTheme = 'light'; // Replace this with your app's default theme.

  const themeControllers = document.querySelectorAll<HTMLInputElement>('.theme-controller');

  const changeTheme = (theme: string) => {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
  };

  const currentTheme = localStorage.getItem('theme') || defaultTheme;
  changeTheme(currentTheme); // Apply the saved or default theme on load.

  themeControllers.forEach((controller) => {
    if (controller.dataset.theme === currentTheme) {
      controller.checked = true;
    }

    controller.addEventListener('click', (event) => {
      const target = event.target as HTMLInputElement;
      if (target?.value) {
        changeTheme(target.value);
      }
    });
  });
</script>
